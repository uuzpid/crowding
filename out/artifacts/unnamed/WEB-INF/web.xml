<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-persist-*.xml</param-value>
    </context-param>
    
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!--设定字符编码集-->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <!--设定请求的字符集必须为规定的字符集-->
        <init-param>
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--设定响应的字符集必须为规定的字符集-->
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>

    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-web-mvc.xml</param-value>
        </init-param>
        <!--Servlet默认生命周期中，创建对象是在第一次收到请求时-->
        <!--DispatcherServlet创建对象后有大量的"框架初始化工作" 不适合在第一次请求时来做-->
        <!--而设置load-on-startup就是为了让DispatcherServlet在web应用启动时创建对象，初始化-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>springDispatcherServlet</servlet-name>
        <!--/：表示拦截所有请求-->
        <!--<url-pattern>/</url-pattern>-->
        <!--配置请求扩展名-->
        <!--优点：xx.css,xx.js,xx.png等静态资源，完全不经过SpringMVC，不需要特殊处理-->
        <!--优点：可以实现伪静态的效果 看起来像是访问一个html文件的静态资源，实际上是经过java计算的动态资源-->
        <!--缺点：不符合restful风格-->
        <url-pattern>*.html</url-pattern>

        <!--为什么要再配置一个json扩展名-->
        <!--如果一个AJAX请求扩展名是html，但实际服务器给浏览器返回的是json数据，二者就不匹配了，会出现406错误-->
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>
</web-app>